상속 정리 

1) 상속
c++
#include <iostream>
#include <string>

using namespace std;

// 부모 클래스 (Animal)
class Animal {
public:
    // 생성자
    Animal(string name) : name(name) {}

    // 멤버 함수
    virtual void speak() const {
        cout << name << "가 소리를 냅니다." << endl;
    }

protected:
    string name;
};

// 자식 클래스 (Cat)
class Cat : public Animal {
public:
    // 생성자
    Cat(string name, string breed) : Animal(name), breed(breed) {}

    // speak 함수 오버라이딩
    void speak() const override {
        cout << name << "는 야옹하고 울어요." << endl;
    }

private:
    string breed;
};

// 자식 클래스 (Dog)
class Dog : public Animal {
public:
    // 생성자
    Dog(string name, string size) : Animal(name), size(size) {}

    // speak 함수 오버라이딩
    void speak() const override {
        cout << name << "는 멍멍하고 짖어요." << endl;
    }

private:
    string size;
};

int main() {
    // 객체 생성
    Cat cat("고양이", "러시안블루");
    Dog dog("강아지", "대형");

    // 메서드 호출
    cat.speak();  // 고양이의 울음 소리
    dog.speak();  // 개의 짖는 소리

    return 0;
}

=========================
파이썬
# 부모 클래스 (Animal)
class Animal:
    def __init__(self, name):
        self.name = name

    def speak(self):
        print(f"{self.name}가 소리를 냅니다.")

# 자식 클래스 (Cat)
class Cat(Animal):
    def __init__(self, name, breed):
        super().__init__(name)  # 부모 클래스의 __init__ 메서드를 호출
        self.breed = breed

    def speak(self):  # 부모 클래스의 speak 메서드를 재정의 (오버라이딩)
        print(f"{self.name}는 야옹하고 울어요.")

# 자식 클래스 (Dog)
class Dog(Animal):
    def __init__(self, name, size):
        super().__init__(name)  # 부모 클래스의 __init__ 메서드를 호출
        self.size = size

    def speak(self):  # 부모 클래스의 speak 메서드를 재정의 (오버라이딩)
        print(f"{self.name}는 멍멍하고 짖어요.")

# 객체 생성
cat = Cat("고양이", "러시안블루")
dog = Dog("강아지", "대형")

# 메서드 호출
cat.speak()  # 고양이의 울음 소리
dog.speak()  # 개의 짖는 소리

--------------------------------------------------------------------
자바
// 부모 클래스 (Animal)
class Animal {
    String name;

    // 생성자
    public Animal(String name) {
        this.name = name;
    }

    // 메서드
    public void speak() {
        System.out.println(name + "가 소리를 냅니다.");
    }
}

// 자식 클래스 (Cat)
class Cat extends Animal {
    String breed;

    // 생성자
    public Cat(String name, String breed) {
        super(name); // 부모 클래스의 생성자 호출
        this.breed = breed;
    }

    // 메서드 오버라이딩
    @Override
    public void speak() {
        System.out.println(name + "는 야옹하고 울어요.");
    }
}

// 자식 클래스 (Dog)
class Dog extends Animal {
    String size;

    // 생성자
    public Dog(String name, String size) {
        super(name); // 부모 클래스의 생성자 호출
        this.size = size;
    }

    // 메서드 오버라이딩
    @Override
    public void speak() {
        System.out.println(name + "는 멍멍하고 짖어요.");
    }
}

public class Main {
    public static void main(String[] args) {
        // 객체 생성
        Cat cat = new Cat("고양이", "러시안블루");
        Dog dog = new Dog("강아지", "대형");

        // 메서드 호출
        cat.speak();  // 고양이의 울음 소리
        dog.speak();  // 개의 짖는 소리
    }
}


